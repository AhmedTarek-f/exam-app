// Mocks generated by Mockito 5.4.6 from annotations
// in exam_app/test/api/data_source/change_password/remote_data_source/change_password_remote_data_source_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i14;

import 'package:connectivity_plus/connectivity_plus.dart' as _i22;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i23;
import 'package:exam_app/api/client/api_client.dart' as _i13;
import 'package:exam_app/api/requests/change_password_request/change_password_request.dart'
    as _i21;
import 'package:exam_app/api/requests/edit_profile_request/edit_profile_request.dart'
    as _i20;
import 'package:exam_app/api/requests/email_verification_request/email_verification_request.dart'
    as _i17;
import 'package:exam_app/api/requests/forget_password_request/forget_password_email_request.dart'
    as _i16;
import 'package:exam_app/api/requests/login_request/login_request.dart' as _i15;
import 'package:exam_app/api/requests/reset_password_request/reset_password_request.dart'
    as _i19;
import 'package:exam_app/api/requests/signup_request/signup_request.dart'
    as _i18;
import 'package:exam_app/api/responses/change_password_response/change_password_response.dart'
    as _i9;
import 'package:exam_app/api/responses/edit_profile_response/edit_profile_response.dart'
    as _i7;
import 'package:exam_app/api/responses/email_verification_response/email_verification_response.dart'
    as _i4;
import 'package:exam_app/api/responses/forget_password_response/forget_password_email_response.dart'
    as _i3;
import 'package:exam_app/api/responses/home/subject_response.dart' as _i10;
import 'package:exam_app/api/responses/login_response/login_response.dart'
    as _i2;
import 'package:exam_app/api/responses/reset_password_response/reset_password_response.dart'
    as _i6;
import 'package:exam_app/api/responses/signup_response/signup_response.dart'
    as _i5;
import 'package:exam_app/api/responses/splash_response/splash_response.dart'
    as _i8;
import 'package:exam_app/api/responses/subject_exams_response/subject_exams_response.dart'
    as _i11;
import 'package:exam_app/utils/secure_storage/secure_storage.dart' as _i24;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i12;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeLoginResponse_0 extends _i1.SmartFake implements _i2.LoginResponse {
  _FakeLoginResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeForgetPasswordEmailResponse_1 extends _i1.SmartFake
    implements _i3.ForgetPasswordEmailResponse {
  _FakeForgetPasswordEmailResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEmailVerificationResponse_2 extends _i1.SmartFake
    implements _i4.EmailVerificationResponse {
  _FakeEmailVerificationResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSignupResponse_3 extends _i1.SmartFake
    implements _i5.SignupResponse {
  _FakeSignupResponse_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResetPasswordResponse_4 extends _i1.SmartFake
    implements _i6.ResetPasswordResponse {
  _FakeResetPasswordResponse_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEditProfileResponse_5 extends _i1.SmartFake
    implements _i7.EditProfileResponse {
  _FakeEditProfileResponse_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSplashResponse_6 extends _i1.SmartFake
    implements _i8.SplashResponse {
  _FakeSplashResponse_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeChangePasswordResponse_7 extends _i1.SmartFake
    implements _i9.ChangePasswordResponse {
  _FakeChangePasswordResponse_7(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSubjectResponse_8 extends _i1.SmartFake
    implements _i10.SubjectResponse {
  _FakeSubjectResponse_8(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeSubjectExamsResponse_9 extends _i1.SmartFake
    implements _i11.SubjectExamsResponse {
  _FakeSubjectExamsResponse_9(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeFlutterSecureStorage_10 extends _i1.SmartFake
    implements _i12.FlutterSecureStorage {
  _FakeFlutterSecureStorage_10(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiClient extends _i1.Mock implements _i13.ApiClient {
  MockApiClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Future<_i2.LoginResponse> login({required _i15.LoginRequest? request}) =>
      (super.noSuchMethod(
            Invocation.method(#login, [], {#request: request}),
            returnValue: _i14.Future<_i2.LoginResponse>.value(
              _FakeLoginResponse_0(
                this,
                Invocation.method(#login, [], {#request: request}),
              ),
            ),
          )
          as _i14.Future<_i2.LoginResponse>);

  @override
  _i14.Future<_i3.ForgetPasswordEmailResponse> sendEmailVerification({
    required _i16.ForgetPasswordEmailRequest? request,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendEmailVerification, [], {#request: request}),
            returnValue: _i14.Future<_i3.ForgetPasswordEmailResponse>.value(
              _FakeForgetPasswordEmailResponse_1(
                this,
                Invocation.method(#sendEmailVerification, [], {
                  #request: request,
                }),
              ),
            ),
          )
          as _i14.Future<_i3.ForgetPasswordEmailResponse>);

  @override
  _i14.Future<_i4.EmailVerificationResponse> verifyEmailCode({
    required _i17.EmailVerificationRequest? request,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#verifyEmailCode, [], {#request: request}),
            returnValue: _i14.Future<_i4.EmailVerificationResponse>.value(
              _FakeEmailVerificationResponse_2(
                this,
                Invocation.method(#verifyEmailCode, [], {#request: request}),
              ),
            ),
          )
          as _i14.Future<_i4.EmailVerificationResponse>);

  @override
  _i14.Future<_i5.SignupResponse> signup({
    required _i18.SignupRequest? request,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#signup, [], {#request: request}),
            returnValue: _i14.Future<_i5.SignupResponse>.value(
              _FakeSignupResponse_3(
                this,
                Invocation.method(#signup, [], {#request: request}),
              ),
            ),
          )
          as _i14.Future<_i5.SignupResponse>);

  @override
  _i14.Future<_i6.ResetPasswordResponse> resetPassword({
    required _i19.ResetPasswordRequest? request,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#resetPassword, [], {#request: request}),
            returnValue: _i14.Future<_i6.ResetPasswordResponse>.value(
              _FakeResetPasswordResponse_4(
                this,
                Invocation.method(#resetPassword, [], {#request: request}),
              ),
            ),
          )
          as _i14.Future<_i6.ResetPasswordResponse>);

  @override
  _i14.Future<void> logout({required String? token}) =>
      (super.noSuchMethod(
            Invocation.method(#logout, [], {#token: token}),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<_i7.EditProfileResponse> editProfile({
    required String? token,
    required _i20.EditProfileRequest? request,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#editProfile, [], {
              #token: token,
              #request: request,
            }),
            returnValue: _i14.Future<_i7.EditProfileResponse>.value(
              _FakeEditProfileResponse_5(
                this,
                Invocation.method(#editProfile, [], {
                  #token: token,
                  #request: request,
                }),
              ),
            ),
          )
          as _i14.Future<_i7.EditProfileResponse>);

  @override
  _i14.Future<_i8.SplashResponse> getUserData({required String? token}) =>
      (super.noSuchMethod(
            Invocation.method(#getUserData, [], {#token: token}),
            returnValue: _i14.Future<_i8.SplashResponse>.value(
              _FakeSplashResponse_6(
                this,
                Invocation.method(#getUserData, [], {#token: token}),
              ),
            ),
          )
          as _i14.Future<_i8.SplashResponse>);

  @override
  _i14.Future<_i9.ChangePasswordResponse> changePassword({
    required String? token,
    required _i21.ChangePasswordRequest? request,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#changePassword, [], {
              #token: token,
              #request: request,
            }),
            returnValue: _i14.Future<_i9.ChangePasswordResponse>.value(
              _FakeChangePasswordResponse_7(
                this,
                Invocation.method(#changePassword, [], {
                  #token: token,
                  #request: request,
                }),
              ),
            ),
          )
          as _i14.Future<_i9.ChangePasswordResponse>);

  @override
  _i14.Future<_i10.SubjectResponse> getAllSubjects({required String? token}) =>
      (super.noSuchMethod(
            Invocation.method(#getAllSubjects, [], {#token: token}),
            returnValue: _i14.Future<_i10.SubjectResponse>.value(
              _FakeSubjectResponse_8(
                this,
                Invocation.method(#getAllSubjects, [], {#token: token}),
              ),
            ),
          )
          as _i14.Future<_i10.SubjectResponse>);

  @override
  _i14.Future<_i11.SubjectExamsResponse> getAllSubjectExams({
    required String? token,
    required String? subjectId,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getAllSubjectExams, [], {
              #token: token,
              #subjectId: subjectId,
            }),
            returnValue: _i14.Future<_i11.SubjectExamsResponse>.value(
              _FakeSubjectExamsResponse_9(
                this,
                Invocation.method(#getAllSubjectExams, [], {
                  #token: token,
                  #subjectId: subjectId,
                }),
              ),
            ),
          )
          as _i14.Future<_i11.SubjectExamsResponse>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i22.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.Stream<List<_i23.ConnectivityResult>> get onConnectivityChanged =>
      (super.noSuchMethod(
            Invocation.getter(#onConnectivityChanged),
            returnValue: _i14.Stream<List<_i23.ConnectivityResult>>.empty(),
          )
          as _i14.Stream<List<_i23.ConnectivityResult>>);

  @override
  _i14.Future<List<_i23.ConnectivityResult>> checkConnectivity() =>
      (super.noSuchMethod(
            Invocation.method(#checkConnectivity, []),
            returnValue: _i14.Future<List<_i23.ConnectivityResult>>.value(
              <_i23.ConnectivityResult>[],
            ),
          )
          as _i14.Future<List<_i23.ConnectivityResult>>);
}

/// A class which mocks [SecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureStorage extends _i1.Mock implements _i24.SecureStorage {
  MockSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.FlutterSecureStorage get storage =>
      (super.noSuchMethod(
            Invocation.getter(#storage),
            returnValue: _FakeFlutterSecureStorage_10(
              this,
              Invocation.getter(#storage),
            ),
          )
          as _i12.FlutterSecureStorage);

  @override
  _i14.Future<void> saveData({required String? key, required String? value}) =>
      (super.noSuchMethod(
            Invocation.method(#saveData, [], {#key: key, #value: value}),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<void> saveUserToken({required String? token}) =>
      (super.noSuchMethod(
            Invocation.method(#saveUserToken, [], {#token: token}),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);

  @override
  _i14.Future<String?> getData({required String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#getData, [], {#key: key}),
            returnValue: _i14.Future<String?>.value(),
          )
          as _i14.Future<String?>);

  @override
  _i14.Future<void> deleteData({required String? key}) =>
      (super.noSuchMethod(
            Invocation.method(#deleteData, [], {#key: key}),
            returnValue: _i14.Future<void>.value(),
            returnValueForMissingStub: _i14.Future<void>.value(),
          )
          as _i14.Future<void>);
}
